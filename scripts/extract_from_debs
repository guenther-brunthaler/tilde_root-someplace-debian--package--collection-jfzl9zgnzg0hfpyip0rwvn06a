#! /bin/sh

# Generate output in collection format from a list of *.deb files specified
# as arguments or read from standard input.
#
# v2025.296

set -e
trap 'test $? = 0 || echo "\"$0\" failed!" >& 2' 0

while getopts '' opt
do
	case $opt in
		*) false || exit
	esac
done
shift `expr $OPTIND - 1 || :`

process() {
	while IFS= read -r f
	do
		case $f in
			-*) f=./$f
		esac
		dpkg-deb -I "$f"
	done \
	| cut -c2- \
	| LC_COLLATE=C awk -f /dev/fd/5 5<< '====='
		# sharing-m81trkjg1g42fl8fhtqs379wm-sect1-begin
		/^Package:/ {emit()}

		/^[[:alnum:]]+:/ {set_attr()}

		END {emit()}

		function set_attr(    k) {
			k = $1
			sub(":$", "", k)
			$1 = ""
			a[k] = trim($0)
		}

		function reset(    i) {
			for (i in a) a[i] = ""
		}

		function emit(    i) {
			# sharing-m81trkjg1g42fl8fhtqs379wm-sect1-end
			# sharing-m81trkjg1g42fl8fhtqs379wm-sect2-begin
			if (a["Package"] == "") {
				reset(); return
			}
			a["Depends"] = sort_depends(a["Depends"])
			print a["Package"] ":" a["Version"] ":" ( \
				a["Description"] ~ "manually.installed" \
				? "deps" \
				: "bundle" \
			) ":" a["Depends"]
			reset()
		}

		function trim(x) {
			sub("[[:space:]]+", " ", x)
			sub("^ ", "", x)
			sub(" $", "", x)
			return x
		}
		
		function sort_depends(deps    , a, n, i) {
			gsub("[[:space:]]+", "", deps)
			n = split(deps, a, ",")
			gnomesort(a, 1, n)
			deps = ""
			for (i = 1; i <= n; ++i) deps = deps "," a[i]
			sub("^,", "", deps)
			return deps
		}
		
		function gnomesort(array, low, high    , i, t) {
			i = low
			while (i < high) {
				if ("x" array[i] <= "x" array[i + 1]) {
					++i
				} else {
					t = array[i]
					array[i] = array[i + 1]
					array[i + 1] = t
					if (i > low) --i; else ++i
				}
			}
		}
		# sharing-m81trkjg1g42fl8fhtqs379wm-sect2-end
=====
}

if test $# = 0 && test ! -t 0
then
	process
else
	for arg
	do
		printf '%s\n' "$arg"
	done | process
fi \
| LC_COLLATE=C sort -t : -u -k 1,1 -k 2,2n
