#! /bin/sh
# Feed a list of metapackage names to this script as its standard input. It
# will invoke the "$helper"-script with appropriate arguments in order to
# create and install a metapackage with the selected name with parameters
# taken from file "$database".
#
# Version 2025.295
# Copyright (c) 2020-2025 Guenther Brunthaler. All rights reserved.
#
# This script is free software.
# Distribution is permitted under the terms of the GPLv3.

helper='dpkg-register-dependencies-as-metapackage'
database='collections.txt'

set -e
trap 'test $? = 0 || echo "\"$0\" failed!" >& 2' 0

dry_run=false
while getopts n opt
do
	case $opt in
		n) dry_run=true;;
		*) false || exit
	esac
done
shift `expr $OPTIND - 1 || :`

test $# = 0
test -f "$database"
command -v -- "$helper" > /dev/null

export LC_COLLATE=C

println() {
	printf '%s\n' "$*"
}

die() {
	println "$@" >& 2
	false || exit
}

sort -cut : -- "$database"
sort -ut : | join -t : -a 1 - "$database" \
| while IFS=: read meta rev type deps nothing
do
	# Split dependencies into sets of alternatives.
	println "$deps" | tr , '\n' \
	| while IFS= read alts
	do
		# Split sets of alternatives into contained alternatives.
		println "$alts" | tr '|' '\n' \
		| sed '/^[-+_.[:alnum:]]\{1,\}-[[:xdigit:]]\{24\}$/ !d' \
		| while IFS= read alt
		do
			# Emit ordering specifications so that dependencies
			# which are $database entries precede the package
			# containing those depencencies.
			println "$alt $meta"
		done
		# Emit a redundant ordering specification for the current
		# itself as the last specification.
		println "$meta $meta"
	done
done \
| tsort \
| {
	# The requested packages including their dependencies from $database
	# have been sorted in the order in which they need to be installed.
	# Add an integer counter after the metapackage name which reflects
	# that installation order.
	i=1
	while read meta
	do
		println "$meta:$i"
		i=`expr $i + 1`
	done
} \
| sort -ut : | join -t : -a 1 - "$database" \
| sort -t : -k 2,2n \
| cut -d : -f 1,3- \
| while IFS=: read meta rev type deps nothing
do
	# The requested entries from the collection, augmented by their
	# dependencies, are being read in the order in which they shall be
	# installed.
	test "$meta" || die "Empty package name encountered!"
	expr x"$meta" : x'.*-[0-9a-f]\{24\}$' > /dev/null \
		|| die "$meta missing 96-bit package ID" \
			"at the end of its name!"
	test -z "$nothing" || die "Excess fields for package '$meta'!"
	test "$rev" || die "No revision number for package '$meta'!"
	case $type in
		bundle) opt=;;
		deps) opt=-m;;
		*) die "Unknown kind '$type' for package '$meta'!"
	esac
	set "$helper" -r "$rev" -d "$deps" $opt -- "$meta"
	if $dry_run
	then
		set echo SIMULATION: "$@"
	else
		println "$meta..." >& 2
	fi
	"$@" || die "Could not execute >>>$*<<<!"
done
